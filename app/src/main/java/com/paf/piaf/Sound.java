package com.paf.piaf;


import com.j256.ormlite.dao.ForeignCollection;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.field.ForeignCollectionField;
import com.j256.ormlite.table.DatabaseTable;

import java.util.ArrayList;
import java.util.Objects;

@DatabaseTable(tableName = "sounds")
public class Sound {

    public final static String[] LEVELS = {"initiation","débutant","intermédiaire","expert"};
    public final static String TYPE_FIELD_NAME = "type";
    public final static String ID_LEVEL_FIELD_NAME = "id_level";
    public final static String PATH_FIELD_NAME = "path";
    public final static String BIRD_FIELD_NAME = "bird";


    // id is generated by the database and set on the object automagically
    @DatabaseField(generatedId = true)
    private int id;
    @DatabaseField(canBeNull = false, columnName = TYPE_FIELD_NAME)
    private String type;
    @DatabaseField(unique=true,  canBeNull = false, columnName = PATH_FIELD_NAME)
    private String path;
    @DatabaseField(canBeNull = false, columnName = ID_LEVEL_FIELD_NAME)
    private int idLevel;
    @DatabaseField(foreign = true, foreignAutoRefresh = true, columnName = BIRD_FIELD_NAME)
    private Bird bird;

    @ForeignCollectionField
    private ForeignCollection<Score> scores;

    Sound() {
        // needed by ormlite
    }

    public Sound(String type, String path, int idLevel, Bird bird) {
        if (idLevel < LEVELS.length && idLevel>=0) {
            this.idLevel = idLevel;
        } else {
            this.idLevel = 0;
        }
        this.type = type;
        this.path = path;
        this.bird = bird;
    }

    public int getId() {
        return id;
    }

    public String getType() {
        return type;
    }

    public String getPath() {
        return path;
    }

    public String getBasePath() { return path.substring(0,path.lastIndexOf("."));}

    public String getLevel() {
        return LEVELS[idLevel];
    }

    public int getIdLevel() {
        return idLevel;
    }

    public Bird getBird() {
        return bird;
    }

    public ForeignCollection<Score> getScores() {
        return scores;
    }

    public static String[] getLevels() {
        return LEVELS;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Sound)) return false;
        Sound sound = (Sound) o;
        return id == sound.id;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }

    @Override
    public String toString() {
        return bird.getFrench() + " (" + type + ")";
    }
}
